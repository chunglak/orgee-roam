#+title: Testo
#+property: header-args:jupyter-python :kernel orgee-roam :session testo

* Init
#+begin_src jupyter-python :async yes
import logging, sys, time
from IPython import get_ipython

# Display stderr messages in output
sys.stderr = sys.stdout
# Setup root logger format
logging.basicConfig(
    level=logging.INFO,  # default is WARNING
    format="%(asctime)s-%(module)s[%(funcName)s:%(lineno)s]\n"
    "%(levelname)s-%(message)s",
)
# Enable auto-reload of imported code
ipy = get_ipython()
if "IPython.extensions.autoreload" not in sys.modules:
    ipy.run_line_magic("load_ext", "autoreload")
# Set external code to reload before each exec
ipy.run_line_magic("autoreload", "2")


def runf(func):
    t0 = time.time()
    r = func()
    print(f"Task finished in {time.time()-t0:.2f}s")
    return r


print("Init done")
#+end_src

* Make finder files
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    import os.path
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    zk.make_finder_files()
    zk.make_finder_files_by_creation_ts()


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Testo exclude
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    zid = "042c6b2c-ff5b-42dc-ae66-ec1063be02bf"
    zid = "8e9d1a34-bd5c-4a3e-954a-98735e6cf3d2"
    z = zk[zid]
    p = z.properties.first_property_by_key("ROAM_EXCLUDE")
    print(p)


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Zettelkasten
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    zs = zk.zettels
    print(len(list(zs)))


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Zettelkasten speed
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Add zettel
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    z = zk.make_zettel(title="My testo")
    print(z)


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Make finder
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    zk.make_finder_files()


runf(func)  # pylint: disable=undefined-variable
#+end_src

* OrgNode2
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee import OrgNode

    fn = "/home/chunglak/monobox/zettel/20220819134353-enum.org"

    node = OrgNode.from_file(fn)
    print(node.children)


runf(func)  # pylint: disable=undefined-variable
#+end_src

* normalize_links
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten
    from orgee_roam.zk_func.normalize_links import normalize_zettel_links

    zk = ZettelKasten()
    zid = "f8d8d44d-0181-413c-aacc-90f1d166419b"
    zettel = zk[zid]
    normalize_zettel_links(zettel=zettel, zk=zk)


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Check zids
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    zid='fce61dea-5487-4419-b981-586ccbb46c84'
    print(zid in zk)
    # for zid,z in zk.items():
    #     if zid.startswith('fce61'):
    #         print(z)


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Check dead links
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    from orgee_roam import ZettelKasten

    zk = ZettelKasten()
    r = zk.check_dead_links()
    if r:
        for z, ls in r:
            print(z)
            for z, t in ls:
                print(f"{t} [{z}]")
            print()


runf(func)  # pylint: disable=undefined-variable
#+end_src

* Func
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    pass


runf(func)  # pylint: disable=undefined-variable
#+end_src
