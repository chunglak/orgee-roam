#+title: Testo
#+property: header-args:jupyter-python :kernel orgee-roam :session testo

* Init
#+begin_src jupyter-python :async yes
import logging, sys, time
from IPython import get_ipython

# Display stderr messages in output
sys.stderr = sys.stdout
# Setup root logger format
logging.basicConfig(
    level=logging.INFO,  # default is WARNING
    format="%(asctime)s-%(module)s[%(funcName)s:%(lineno)s]\n"
    "%(levelname)s-%(message)s",
)
# Enable auto-reload of imported code
ipy = get_ipython()
if "IPython.extensions.autoreload" not in sys.modules:
    ipy.run_line_magic("load_ext", "autoreload")
# Set external code to reload before each exec
ipy.run_line_magic("autoreload", "2")


def runf(func):
    t0 = time.time()
    r = func()
    print(f"Task finished in {time.time()-t0:.2f}s")
    return r


print("Init done")
#+end_src

#+RESULTS:
: Init done

* Load local config file
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    import pprint
    from orgee_roam.config import get_config

    pprint.pprint(get_config())


runf(func)  # pylint: disable=undefined-variable
#+end_src

#+RESULTS:
: ({'roam_cache': '/home/chunglak/.emacs.d/orgzettel-cache.json',
:   'zettelkasten_root': '/home/chunglak/orgzettel'},
:  '/home/chunglak/.orgee-roam.ini')
: Task finished in 0.00s

* Func
#+begin_src jupyter-python :async yes
def func():
    # pylint: disable=import-outside-toplevel
    pass


runf(func)  # pylint: disable=undefined-variable
#+end_src
